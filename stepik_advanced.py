#
a, b = int(input()), int(input())
print(a + b, a - b, a * b, a / b, a // b, a % b, (a ** 10 + b ** 10) ** 0.5, sep='\n')

#
mass, rost = float(input()), float(input())
imt = mass / (rost * rost)
if imt < 18.5: print('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –º–∞—Å—Å–∞')
elif 18.5 <= imt <= 25: print('–û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –º–∞—Å—Å–∞')
elif imt > 25: print('–ò–∑–±—ã—Ç–æ—á–Ω–∞—è –º–∞—Å—Å–∞')

#
s = len(input()) * 60
print(f'{s // 100} —Ä. {s % 100} –∫–æ–ø.')

#
animals = ["–û–±–µ–∑—å—è–Ω–∞", "–ü–µ—Ç—É—Ö", "–°–æ–±–∞–∫–∞", "–°–≤–∏–Ω—å—è", "–ö—Ä—ã—Å–∞",
           "–ë—ã–∫", "–¢–∏–≥—Ä", "–ó–∞—è—Ü", "–î—Ä–∞–∫–æ–Ω", "–ó–º–µ—è", "–õ–æ—à–∞–¥—å", "–û–≤—Ü–∞"]
print(animals[int(input()) % 12])

#–ó–∞–¥–∞—á–∞ –ò–æ—Å–∏—Ñ–∞ –§–ª–∞–≤–∏—è üå∂Ô∏èüå∂Ô∏è
n, k = int(input()), int(input())
s = [i for i in range(1, n + 1)]
while len(s) > 1:
    for q in range(0, k - 1):
        s.append(s[q])
    del s[:k]
print(*s)

#–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω—ã–µ —á–µ—Ç–≤–µ—Ä—Ç–∏
def definition_quarter(x, y):
    quarter = 0
    if x == 0 or y == 0: quarter = 0
    if x < 0 and y > 0: quarter = 2
    elif x > 0 and y > 0: quarter = 1
    elif x < 0 and y < 0: quarter = 3
    elif x > 0 and y < 0: quarter = 4
    return quarter

n = int(input())
ls = [input().rsplit() for i in range(n)]
qu1, qu2, qu3, qu4 = 0, 0, 0, 0
for i in ls:
    x, y = int(i[0]), int(i[1])
    temp = definition_quarter(x, y)
    if temp == 0: continue
    elif temp == 1: qu1 += 1
    elif temp == 2: qu2 += 1
    elif temp == 3: qu3 += 1
    elif temp == 4: qu4 += 1
print(f'–ü–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {qu1}' + '\n' +
      f'–í—Ç–æ—Ä–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {qu2}' + '\n' +
      f'–¢—Ä–µ—Ç—å—è —á–µ—Ç–≤–µ—Ä—Ç—å: {qu3}' + '\n' +
      f'–ß–µ—Ç–≤–µ—Ä—Ç–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {qu4}')

#–ö—Ä–µ–º–Ω–∏–µ–≤–∞—è –¥–æ–ª–∏–Ω–∞ ü§ñüå∂Ô∏èüå∂Ô∏è
ls = [input() for i in range(int(input()))]
s_main = 'anton'
s_temp = ''
for s in ls:
    s_temp = s
    for i in s_main:
        if i in s_temp:
           s_temp = s_temp[s_temp.find(i):]
        else:
            break
    else:
        print(ls.index(s) + 1, end=' ')

#–†–æ—Å–∫–æ–º–Ω–∞–¥–∑–æ—Ä –∑–∞–ø—Ä–µ—Ç–∏–ª –±—É–∫–≤—É stepik
word = input() + ' –∑–∞–ø—Ä–µ—Ç–∏–ª –±—É–∫–≤—É'
a = [chr(i) for i in range(1072,1184) if chr(i) != '—ë']
for x in a:
    if x in word:
        print(word, x)
        word = word.replace(x, '').replace('  ', ' ').strip()

# –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞
def word_chek(new_word):
    result = 0
    if new_word == '–∫–∞–º–µ–Ω—å': result = 1
    elif new_word == '–Ω–æ–∂–Ω–∏—Ü—ã': result = 2
    elif new_word == '–±—É–º–∞–≥–∞': result = 3
    elif new_word == '—è—â–µ—Ä–∏—Ü–∞': result = 4
    elif new_word == '–°–ø–æ–∫': result = 5
    return result

def game_chek(timur, ruslan):
    s_result = ''
    if timur == 1 and ruslan == 2: s_result = '–¢–∏–º—É—Ä'
    elif timur == 2 and ruslan == 3: s_result = '–¢–∏–º—É—Ä'
    elif timur == 3 and ruslan == 1: s_result = '–¢–∏–º—É—Ä'
    elif timur == 1 and ruslan == 4: s_result = '–¢–∏–º—É—Ä'
    elif timur == 2 and ruslan == 4: s_result = '–¢–∏–º—É—Ä'
    elif timur == 3 and ruslan == 5: s_result = '–¢–∏–º—É—Ä'
    elif timur == 4 and ruslan == 5: s_result = '–¢–∏–º—É—Ä'
    elif timur == 4 and ruslan == 3: s_result = '–¢–∏–º—É—Ä'
    elif timur == 5 and ruslan == 1: s_result = '–¢–∏–º—É—Ä'
    elif timur == 5 and ruslan == 2: s_result = '–¢–∏–º—É—Ä'

    if timur == 1 and ruslan == 3: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 2 and ruslan == 1: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 3 and ruslan == 2: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 1 and ruslan == 5: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 2 and ruslan == 5: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 3 and ruslan == 4: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 4 and ruslan == 1: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 4 and ruslan == 2: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 5 and ruslan == 3: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 5 and ruslan == 4: s_result = '–†—É—Å–ª–∞–Ω'

    if timur == ruslan: s_result = '–ù–∏—á—å—è'
    return print(s_result)

game_chek(word_chek(input()),word_chek(input()))

#–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ç–Ω–æ—Å—Ç–∏
def digit(num1, num2):
    if num1 % num2 == 0: return '–¥–µ–ª–∏—Ç—Å—è'
    else: return '–Ω–µ –¥–µ–ª–∏—Ç—Å—è'
print(digit(int(input()),int(input())))

list1 = [[1, 7, 8], [9, 7, 102], [102, 106, 105], [100, 99, 98, 103], [1, 2, 3]]
total = 0
counter = 0
for i in list1:
    total += sum(i)
    counter += len(i)
print(total / counter)

#–°–ø–∏—Å–æ–∫ –ø–æ –æ–±—Ä–∞–∑—Ü—É
n = int(input())
ls = []
for i in range(n):
    ls2 = []
    for k in range(n):
        ls2.append(k + 1)
    ls.append(ls2)
print(*ls, sep = '\n')

#–£–ø–∞–∫–æ–≤–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ üå∂Ô∏è
ls_original = input().split()
ls_new = [[ls_original[0]]]
for i in range(1, len(ls_original)):
    if ls_original[i] == ls_original[i - 1]:
        # list[-1] - (-1) –∏–Ω–¥–µ–∫—Å, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ø–∏–æ—Å–∫
        ls_new[-1].append(ls_original[i])
    else:
        ls_new.append([ls_original[i]])
print(ls_new)

#–ü–æ–¥—Å–ø–∏—Å–∫–∏ —Å–ø–∏—Å–∫–∞
ls_original = input().split()
ls = [[]]
for i in range(len(ls_original)):
    for j in range(len(ls_original) - i):
        ls.append(ls_original[j:j + i + 1])
print(ls)

#–í—ã–≤–µ—Å—Ç–∏ –º–∞—Ç—Ä–∏—Ü—É 1
n, m = int(input()), int(input())
# –°–æ–∑–¥–∞–µ–º —Å—Ä–∞–∑—É –º–∞—Ç—Ä–∏—Ü—É –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º N –∏ M
ls = [[input() for _ in range(m)] for _ in range(n)]
#–í—ã–≤–æ–¥–∏–º –º–∞—Ç—Ä–∏—Ü–∞ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª—ã
for i in range(n):
    for j in range(m):
        print(ls[i][j], end=' ')
    print()
#–í—ã–≤–æ–¥ –º–∞—Ç—Ä–∏—Ü—ã –ø–æ—Å—Ç—Ä–æ—á–Ω–æ
# for st in maxtix:
    # print(*st)

#–°–ª–µ–¥ –º–∞—Ç—Ä–∏—Ü—ã ‚ÜòÔ∏è
n = int(input())
ls = [input().split() for _ in range(n)]
summ = 0
for i in range(n):
    summ += int(ls[i][i])
print(summ)

#–ë–æ–ª—å—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ
n = int(input())
# –§–æ—Ä–º–∏—Ä—É–µ–º –º–∞—Ç—Ä–∏—Ü—É —á–µ—Ä–µ–∑ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ —Å–ø–∏—Å–æ–∫
# –ø–æ—Å–ª–µ –≤–∫–ª–∞–¥—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫(–≤ –º–∞—Ç—Ä–∏—Ü—É)
ls = [[int(x) for x in input().split()] for _ in range(n)]
for i in ls:
    mean = 0
    for j in i:
        if j > (sum(i) / n): mean += 1
    print(mean)

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤ –æ–±–ª–∞—Å—Ç–∏ 1
n = int(input())
ls = [[int(x) for x in input().split()] for _ in range(n)]
# –§–æ—Ä–º–∏—Ä—É–µ–º –º–∞—Ç—Ä–∏—Ü—É –∏–∑ –ø–æ–ª–æ–≤–∏–Ω—ã –∫–≤–∞–¥—Ä–∞—Ç–∞ –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª–∏ —á–µ—Ä–µ–∑ —Å—Ä–µ–∑
ls_new = [ls[i][:i + 1] for i in range(n)]
ls_temp = []
for i in ls_new:
    ls_temp.append(max(i))
print(max(ls_temp))

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤ –æ–±–ª–∞—Å—Ç–∏ 2 üå∂Ô∏è
n = int(input())
ls = [[int(x) for x in input().split()] for _ in range(n)]
mx = ls[0][0]
for i in range(n):
    for j in range(n):
        if (i >= j and i <= n - 1 - j or
            i <= j and i >= n - 1 - j) and ls[i][j] > mx:
            mx = ls[i][j]
print(mx)

#–°—É–º–º—ã —á–µ—Ç–≤–µ—Ä—Ç–µ–π
n = int(input())
ls = [[int(x) for x in input().split()] for _ in range(n)]
up, left, right, down = 0, 0, 0, 0
for i in range(n):
    for j in range(n):
        if i < j and i > n - 1 - j: right += ls[i][j]
        if i < j and i < n - 1 - j: up += ls[i][j]
        if i > j and i < n - 1 - j: left += ls[i][j]
        if i > j and i > n - 1 - j: down += ls[i][j]
print(f'–í–µ—Ä—Ö–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å: {up}', f'–ü—Ä–∞–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {right}',
      f'–ù–∏–∂–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å: {down}', f'–õ–µ–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {left}', sep='\n')

# –¢–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è
n, m = int(input()), int(input())
ls = [[i * j for i in range(m)] for j in range(n)]
for i in range(n):
    for j in range(m):
        print(str(ls[i][j]).ljust(3), end='')
    print()

# –ú–∞–∫—Å–∏–º—É–º –≤ —Ç–∞–±–ª–∏—Ü–µ üîù
n, m = int(input()), int(input())
ls = [[int(x) for x in input().split()] for _ in range(n)]
x, y = 0, 0
el_max = ls[0][0]
for i in range(n):
    for j in range(m):
        if ls[i][j] > el_max:
            el_max = ls[i][j]
            x = i
            y = j
print(x, y)

# –û–±–º–µ–Ω —Å—Ç–æ–ª–±—Ü–æ–≤ ‚è∏Ô∏è
n, m = int(input()), int(input())
ls = [[int(x) for x in input().split()] for _ in range(n)]
s = input()
swap_i, swap_j = int(s[0]), int(s[2])
for i in range(n):
    ls[i][swap_j], ls[i][swap_i] = ls[i][swap_i], ls[i][swap_j]
for i in ls:
    print(*i)

#–û–±–º–µ–Ω –¥–∏–∞–≥–æ–Ω–∞–ª–µ–π üîÉ
n = int(input())
ls = [[int(x) for x in input().split()] for _ in range(n)]
for i in range(n):
    ls[i][i], ls[n - i - 1][i] = ls[n - i - 1][i], ls[i][i]
for i in ls: print(*i)

# –ó–µ—Ä–∫–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ ü¶ã
n = int(input())
ls = [[int(x) for x in input().split()] for _ in range(n)]
for i in range(n // 2):
    for j in range(n):
        ls[i][j], ls[n - i - 1][j] = ls[n - i - 1][j], ls[i][j]
for i in ls: print(*i)

#–•–æ–¥—ã –∫–æ–Ω—è üêé
x, y = input()
n = 8
ls = [['.'] * n for _ in range(n)]
y = n - int(y)
x = ord(x) - 97
ls[y][x] = 'N'
for i in range(n):
    for j in range(n):
        if abs(i - y) * abs(j - x) == 2:
            ls[i][j] = '*'
for i in ls: print(*i)

# –ú–∞–≥–∏—á–µ—Å–∫–∏–π –∫–≤–∞–¥—Ä–∞—Ç ‚ú®üå∂Ô∏è
n = int(input())
ls = [[int(x) for x in input().split()] for _ in range(n)]
digits = [i for i in range(1, n ** 2 + 1)]
d1, d2, = 0, 0
for i in range(n):
    j_summ, i_summ = 0, 0
    for j in range(n):
        j_summ += ls[j][i]
        i_summ += ls[i][j]
        if ls[i][j] in digits:
            digits.remove(ls[i][j])
    d1 += ls[i][i]
    d2 += ls[i][n - i - 1]
    if j_summ != i_summ:
        break
if j_summ == i_summ == d1 == d2 and digits == []: print('YES')
else: print('NO')

#–®–∞—Ö–º–∞—Ç–Ω–∞—è –¥–æ—Å–∫–∞
n, m = input().split()
ls = [[0] * int(m) for _ in range(int(n))]
for i in range(int(n)):
    for j in range(int(m)):
        if (i + j) % 2 == 0: ls[i][j] = '.'
        else: ls[i][j] = '*'
for i in ls:
    print(*i)

#–ü–æ–±–æ—á–Ω–∞—è –¥–∏–∞–≥–æ–Ω–∞–ª—å
n = int(input())
ls = [[0] * n for _ in range(n)]
for i in range(n):
    for j in range(n):
        if j == n - i - 1: ls[i][j] = 1
        elif (i > j or i < j or i == j) and i > n - 1 - j: ls[i][j] = 2
for i in ls:
    print(*i)

#–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ 1
n, m = [int(i) for i in input().split()]
ls = [[0] * m for _ in range(n)]
count = 0
for i in range(n):
    for j in range(m):
        count += 1
        ls[i][j] = count
for i in range(n):
    for j in range(m):
        print(str(ls[i][j]).ljust(3), end=' ')
    print()

#–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ 2
n, m = [int(i) for i in input().split()]
ls = [[0] * m for _ in range(n)]
count = 0
for i in range(m):
    for j in range(n):
        count += 1
        ls[j][i] = count
for i in range(n):
    for j in range(m):
        print(str(ls[i][j]).ljust(3), end=' ')
    print()

#–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø–∏—Ä–∞–ª—å—é üåÄüå∂Ô∏èüå∂Ô∏è
n, m = [int(i) for i in input().split()]
ls = [[0] * m for _ in range(n)]
x, y = 0, 0
dx, dy = 0, 1
ls[0][0] = 1
count = 2
while count <= n * m:
    if 0 <= x + dx <= n - 1 and 0 <= y + dy <= m - 1 and ls[x + dx][y + dy] == 0:
        ls[x + dx][y + dy] = count
        count += 1
        x += dx
        y += dy
    else:
        if dy == 1:
            dy = 0
            dx = 1
        elif dx == 1:
            dx = 0
            dy = -1
        elif dy == -1:
            dy = 0
            dx = -1
        elif dx == -1:
            dx = 0
            dy = 1

for i in range(n):
    for j in range(m):
        print(str(ls[i][j]).ljust(3), end=' ')
    print()

# –°–ª–æ–∂–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü
n, m = [int(i) for i in input().split()]
ls1 = [[int(x) for x in input().split()] for _ in range(n)]
input()
ls2 = [[int(x) for x in input().split()] for _ in range(n)]
ls_new = [[ls1[i][j] + ls2[i][j] for j in range(m)] for i in range(n)]
for i in ls_new:
    print(*i)

# –£–º–Ω–æ–∂–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü üå∂Ô∏è
s_temp = 0
n, m = [int(i) for i in input().split()]
ls1 = [[int(x) for x in input().split()] for _ in range(n)]
input()
n1, m1 = [int(i) for i in input().split()]
ls2 = [[int(x) for x in input().split()] for _ in range(n1)]
ls_new = [[0] * m1 for _ in range(n)]
for i in range(n):
    for q in range(m1):
        for k in range(m):
            s_temp += ls1[i][k] * ls2[k][q]
        ls_new[i][q] = s_temp
        s_temp = 0
for i in ls_new:
    print(*i)

# –í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã –≤ —Å—Ç–µ–ø–µ–Ω—å üå∂Ô∏è
n = int(input())
ls1 = [[int(x) for x in input().split()] for _ in range(n)]
x = int(input())
ls2 = ls1
for _ in range(x - 1):
    ls3 = [[0] * n for _ in range(n)]
    for i in range(n):
        for q in range(n):
            for k in range(n):
                ls3[i][q] += ls1[i][k] * ls2[k][q]
    ls1 = ls3
for i in ls1:
    print(*i)

tuples = [(10, 20, 40), (40, 50, 60), (70, 80, 90), (10, 90), (1, 2, 3, 4), (5, 6, 10, 2, 1, 77)]
new_tuples = [(i[:-1]) + (100,) for i in tuples]
print(new_tuples)

#–í–µ—Ä—à–∏–Ω–∞ –ø–∞—Ä–∞–±–æ–ª—ã
tup = tuple([int(input()) for _ in range(3)])
ls_temp = [0.0, 0.0]
ls_temp[0] = -(tup[1] / (2 * tup[0]))
ls_temp[1] = (4 * tup[0] * tup[2] - tup[1] ** 2) / (4 * tup[0])
tup = tuple(ls_temp)
print(tup)

# –ö–æ–Ω–∫—É—Ä—Å–Ω—ã–π –æ—Ç–±–æ—Ä
n = int(input())
# –í–≤–æ–¥ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–æ—Ä—Ç–µ–∂–µ–π
tp = tuple(tuple(input().split()) for _ in range(n))
for i in tp: print(*i)
print()
for i in tp:
    if int(i[1]) >= 4: print(*i)

# –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¢—Ä–∏–±–æ–Ω–∞—á—á–∏
n = int(input())
m1, m2, m3 = 1, 1, 1
for i in range(n):
    print(m1, end = ' ')
    m1, m2, m3 = m2, m3, m1 + m2 + m3

# 8.4 –û—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã —Å –º–Ω–æ–∂–µ—Å—Ç–≤–∞–º–∏
# –¢—Ä–∏ —Å–ª–æ–≤–∞
s1, s2, s3 = [set(i) for i in input().split()]
if s1 == s2 == s3: print('YES')
else: print('NO')

# 8.5 –ú–µ—Ç–æ–¥—ã –º–Ω–æ–∂–µ—Å—Ç–≤. –ß–∞—Å—Ç—å 1
# –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã 1
ls = [set(input().lower()) for i in range(int(input()))]
for i in ls: print(len(i))

# –°—á–µ—Ç—á–∏–∫ –≤–µ—Ä–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π ‚úÖüå∂Ô∏èüå∂Ô∏è
student = set()
n = int(input())
correct = 0
for _ in range(n):
    resualt = input().split(': ')
    if resualt[1] == 'Correct':
        correct += 1
        student.add(resualt[0])
if correct:
    print(f'–í–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ {len(student)} —É—á–∞—â–∏—Ö—Å—è')
    print(f'–ò–∑ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫ {round((correct / n) * 100 + 0.001)}% –≤–µ—Ä–Ω—ã—Ö')
else: print('–í—ã –º–æ–∂–µ—Ç–µ —Å—Ç–∞—Ç—å –ø–µ—Ä–≤—ã–º, –∫—Ç–æ —Ä–µ—à–∏—Ç —ç—Ç—É –∑–∞–¥–∞—á—É')

# –û–±—â–∏–µ —á–∏—Å–ª–∞
set1, set2 = set(input().split()), set(input().split())
set3 = set1 & set2
# –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∫–ª—é—á —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ key=int
ls = sorted(set3, key=int)
print(*ls)

# –û–±—â–∏–µ —Ü–∏—Ñ—Ä—ã
ls = [set(input()) for i in range(int(input()))]
set1 = ls[0]
for i in range(1, len(ls)):
    set1.intersection_update(ls[i])
print(*sorted(set1))

#–í—Å–µ —Ü–∏—Ñ—Ä—ã üî¢
set1 = set(input())
set2 = set(input())
flag = set1.issuperset(set2)

# –í—ã–≤–æ–¥ –≤ —Å–∫–æ–±–∫–∞—Ö (
# (–∫–æ—Ä—Ç–µ–∂, –≥–¥–µ 0 –∏–Ω–¥–µ–∫—Å NO –∏ 1 –∏–Ω–¥–µ–∫—Å YES)
# [–æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ –∏–Ω–¥–µ–∫—Å—É –∏–∑ –∑–Ω–∞—á–µ–Ω–∏—è flag(–∏–ª–∏ 0(true) –∏–ª–∏ 1(false)])
print(('NO', 'YES')[flag])

#–£—Ä–æ–∫ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ üß†
set1, set2, set3 = [set(input().split()) for _ in range(3)]
print(*sorted((set1 | set2 | set3) - (set1 & set2 & set3), key=int))

#–£—Ä–æ–∫ –±–∏–æ–ª–æ–≥–∏–∏
set1 = set(int(i) for i in input().split())
set2 = set(int(i) for i in input().split())
set3 = set(int(i) for i in input().split())
set_new = set(range(11))
print(*sorted(set_new - set1 - set2 - set3))

#8.8 –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –º–Ω–æ–∂–µ—Å—Ç–≤ –∏ frozenset
# {–≤—ã—Ä–∞–∂–µ–Ω–∏–µ for –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è in –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å}
words = ['Plum', 'Grapefruit', 'apple', 'orange', 'pomegranate', 'Cranberry', 'lime', 'Lemon', 'grapes', 'persimmon', 'tangerine', 'Watermelon', 'currant', 'Almond']
newset = {i[0].lower() for i in words}
print(*sorted(newset))

# –ö–Ω–∏–≥–∏ –Ω–∞ –ø—Ä–æ—á—Ç–µ–Ω–∏–µ üìö
m, n = int(input()), int(input())
flag = 0
home = {input() for _ in range(m)}
ls = [('NO', 'YES')[input() in home] for _ in range(n)]
print(*ls, sep='\n')

n = int(input())
res = {input() for _ in range(int(input()))}
for _ in range(n - 1):
    res &= {input() for _ in range(int(input()))}
print(*sorted(res), sep= '\n')

users = [{'name': 'Todd', 'phone': '551-1414', 'email': 'todd@gmail.com'},
         {'name': 'Helga', 'phone': '555-1618'},
         {'name': 'Olivia', 'phone': '449-3141', 'email': ''},
         {'name': 'LJ', 'phone': '555-2718', 'email': 'lj@gmail.net'},
         {'name': 'Ruslan', 'phone': '422-145-9098', 'email': 'rus-lan.cha@yandex.ru'},
         {'name': 'John', 'phone': '233-421-32', 'email': ''},
         {'name': 'Lara', 'phone': '+7998-676-2532', 'email': 'g.lara89@gmail.com'},
         {'name': 'Alina', 'phone': '+7948-799-2434'},
         {'name': 'Robert', 'phone': '420-2011', 'email': ''},
         {'name': 'Riyad', 'phone': '128-8890-128', 'email': 'r.mahrez@mail.net'},
         {'name': 'Khabib', 'phone': '+7995-600-9080', 'email': 'kh.nurmag@gmail.com'},
         {'name': 'Olga', 'phone': '6449-314-1213', 'email': ''},
         {'name': 'Roman', 'phone': '+7459-145-8059'},
         {'name': 'Maria', 'phone': '12-129-3148', 'email': 'm.sharapova@gmail.com'},
         {'name': 'Fedor', 'phone': '+7445-341-0545', 'email': ''},
         {'name': 'Tim', 'phone': '242-449-3141', 'email': 'timm.ggg@yandex.ru'}]
newlis = []
for el in users:
    if 'email' not in el or el['email'] == '' : newlis.append(el['name'])
print(*sorted(newlis))

my_dict = {
    0: 'zero',
    1: 'one',
    2: 'two',
    3: 'three',
    4: 'four',
    5: 'five',
    6: 'six',
    7: 'seven',
    8: 'eight',
    9: 'nine'}
ls = [int(i) for i in input()]
ls_new = [my_dict[i] for i in ls]
print(*ls_new)

#–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–µ–±–Ω—ã—Ö –∫—É—Ä—Å–∞—Ö üéì
course = {'CS101': {'room': 3004, 'prepod': '–•–∞–π–Ω—Å', 'time': '8:00' },
          'CS102': {'room': 4501, 'prepod': '–ê–ª—å–≤–∞—Ä–∞–¥–æ', 'time': '9:00' },
          'CS103': {'room': 6755, 'prepod': '–†–∏—á', 'time': '10:00' },
          'NT110': {'room': 1244, 'prepod': '–ë–µ—Ä–∫', 'time': '11:00' },
          'CM241': {'room': 1411, 'prepod': '–õ–∏', 'time': '13:00' }}
number = input()
print(f'{number}: {course[number]['room']}, {course[number]['prepod']}, '
      f'{course[number]['time']}')

# –ù–∞–±–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π üì©
symbol_numbers = {'1': '.,?!:',
                  '2': 'ABC',
                  '3': 'DEF',
                  '4': 'GHI',
                  '5': 'JKL',
                  '6': 'MNO',
                  '7': 'PQRS',
                  '8': 'TUV',
                  '9': 'WXYZ',
                  '0': ' '}
s = input().upper()
s_new = ''
for el in s:
    for key, value in symbol_numbers.items():
        if el in value: print(key * (value.index(el) + 1), end= '')

# –ö–æ–¥ –ú–æ—Ä–∑–µ
letters = [c for c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789']
morse = ['.-', '-...', '-.-.', '-..', '.', '..-.',
         '--.', '....', '..', '.---', '-.-', '.-..',
         '--', '-.', '---', '.--.', '--.-', '.-.', '...',
         '-', '..-', '...-', '.--', '-..-', '-.--', '--..',
         '-----', '.----', '..---', '...--', '....-', '.....',
         '-....', '--...', '---..', '----.']
s = input().upper()
mydict = dict(zip(letters, morse))
for key in s:
    if key in mydict: print(mydict[key], end= ' ')

#–ö–≤–∞–¥—Ä–∞—Ç—ã –∫–ª—é—á–µ–π
result = {}
for i in range(1, 16): result.setdefault(i, i ** 2)
print(result)

#–†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π —Å–ª–æ–≤–∞—Ä—å
dict1 = {'a': 100, 'z': 333, 'b': 200, 'c': 300, 'd': 45, 'e': 98, 't': 76, 'q': 34, 'f': 90, 'm': 230}
dict2 = {'a': 300, 'b': 200, 'd': 400, 't': 777, 'c': 12, 'p': 123, 'w': 111, 'z': 666}
result = dict1.copy()
for key, value in dict2.items():
    result[key] = result.get(key, 0) + value

#–ü–æ–¥—Å—á–µ—Ç –≤—Ö–æ–∂–¥–µ–Ω–∏–π
text = 'footballcyberpunkextraterritorialityconversationalistblockophthalmoscopicinterdependencemamauserfff'
result = {}
for i in text:
    result[i] = result.setdefault(i, 0) + 1
print(result)

#–ù–∞–∏–±–æ–ª–µ–µ –≤—Å—Ç—Ä–µ—á–∞—é—â–µ—Å—è —Å–ª–æ–≤–æ
s = 'orange strawberry barley gooseberry apple apricot barley currant orange melon pomegranate banana banana orange barley apricot plum grapefruit banana quince strawberry barley grapefruit banana grapes melon strawberry apricot currant currant gooseberry raspberry apricot currant orange lime quince grapefruit barley banana melon pomegranate barley banana orange barley apricot plum banana quince lime grapefruit strawberry gooseberry apple barley apricot currant orange melon pomegranate banana banana orange apricot barley plum banana grapefruit banana quince currant orange melon pomegranate barley plum banana quince barley lime grapefruit pomegranate barley'
ls = s.split()
mydict = {}
v_max = 0
key_max = 0
for el in ls:
    mydict[el] = mydict.setdefault(el, 0) + 1
    if mydict[el] > v_max:
        v_max = mydict[el]
        key_max = el
print(key_max)

#–°–ø–∏—Å–æ–∫ pets
pets = [('Hatiko', 'Parker', 'Wilson', 50),
        ('Rusty', 'Josh', 'King', 25),
        ('Fido', 'John', 'Smith', 28),
        ('Butch', 'Jake', 'Smirnoff', 18),
        ('Odi', 'Emma', 'Wright', 18),
        ('Balto', 'Josh', 'King', 25),
        ('Barry', 'Josh', 'King', 25),
        ('Snape', 'Hannah', 'Taylor', 40),
        ('Horry', 'Martha', 'Robinson', 73),
        ('Giro', 'Alex', 'Martinez', 65),
        ('Zooma', 'Simon', 'Nevel', 32),
        ('Lassie', 'Josh', 'King', 25),
        ('Chase', 'Martha', 'Robinson', 73),
        ('Ace', 'Martha', 'Williams', 38),
        ('Rocky', 'Simon', 'Nevel', 32)]

result = {}
for el in pets:
    result.setdefault(el[1:], []).append(el[0])
print(result)

# –°–∞–º–æ–µ —Ä–µ–¥–∫–æ–µ —Å–ª–æ–≤–æ üå∂Ô∏è
ls = [i.lower().strip(".,!?:;-") for i in input().split()]
mydict = {}
for i in ls:
    mydict[i] = ls.count(i)
result = {}
min_count = min(mydict.values())
for key, value in mydict.items():
    if value == min_count:
        result[key] = value
print(min(result))

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ üå∂Ô∏è
ls = input().lower().split()
mydict = {}
ls_new = []
for el in ls:
    if el not in ls_new: ls_new.append(el)
    else:
        mydict[el] = mydict.get(el, 0) + 1
        ls_new.append(el + '_' + str(mydict[el]))
print(*ls_new)

# –°–ª–æ–≤–∞—Ä—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ üìò
it_dict = {}
for _ in range(int(input())):
    k, v = input().split(': ')
    it_dict[k.lower()] = v
for _ in range(int(input())):
    s = input().lower()
    print(it_dict.get(s, '–ù–µ –Ω–∞–π–¥–µ–Ω–æ'))

#–ê–Ω–∞–≥—Ä–∞–º–º—ã 1
s1 = sorted(input())
s2 = sorted(input())
dict1, dict2 = dict(zip(range(len(s1)), s1)), dict(zip(range(len(s2)), s2))
print('YES') if dict2 == dict1 else print('NO')

# –ê–Ω–∞–≥—Ä–∞–º–º—ã 2
s1 = sorted([i for i in input().lower() if i.isalpha()])
s2 = sorted([i for i in input().lower() if i.isalpha()])
dict1, dict2 = dict(zip(range(len(s1)), s1)), dict(zip(range(len(s2)), s2))
print('YES') if dict2 == dict1 else print('NO')
# –¢–æ–∂–µ —Å–∞–º–æ–µ —á–µ—Ä–µ–∑ —Ñ—É–∫–Ω—Ü–∏—é
def s(word):
    res = {}
    for i in word.lower():
        if i.isalpha():
            res[i] = res.get(i, 0) + 1
    return res
print(("NO", "YES")[s(input()) == s(input())])


# –°–ª–æ–≤–∞—Ä—å —Å–∏–Ω–æ–Ω–∏–º–æ–≤
dict_sinonim = {}
for _ in range(int(input())):
    k, v = input().split()
    dict_sinonim[k] = v
sinonim = input()
for k, v in dict_sinonim.items():
    if sinonim == k: print(v)
    if sinonim == v: print(k)

# –°—Ç—Ä–∞–Ω—ã –∏ –≥–æ—Ä–æ–¥–∞
country = {}
for _ in range(int(input())):
    c, *cities = input().split()
    country[c] = cities
for _ in range(int(input())):
    k = input()
    for key, value in country.items():
        if k in value: print(key)

# –¢–µ–ª–µ—Ñ–æ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞ üìí
dict_book = {}
for _ in range(int(input())):
    number, name = input().lower().split()
    dict_book.setdefault(name, []).append(number)
for _ in  range(int(input())):
    s = input().lower()
    #–ú–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Ç–∞–∫
    print(*dict_book[s]) if s in dict_book else print('–∞–±–æ–Ω–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')
    # –ê –º–æ–∂–Ω–æ –≤–æ—Ç —Ç–∞–∫, –±–µ–∑ –≤–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ S –≤—ã—à–µ
    # print(*dict_book.get(input.lower(), ['–∞–±–æ–Ω–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω']))

# –°–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ
s = input()
my_dict = {}
for _ in range(int(input())):
    value, key = input().split(': ')
    my_dict[int(key)] = value
for i in s: print(my_dict[s.count(i)], end='')

#–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª–æ–≤–∞—Ä–µ–π
numbers = [34, 10, -4, 6, 10, 23, -90, 100, 21, -35, -95, 1, 36, -38, -19, 1, 6, 87]
result = {i: numbers[i] ** 2 for i in range(len(numbers))}
print(result)

#–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª–æ–≤–∞—Ä–µ–π 5
s = '1:men 2:kind 90:number 0:sun 34:book 56:mountain 87:wood 54:car 3:island 88:power 7:box 17:star 101:ice'
result = {int(el.split(':')[0]): el.split(':')[1] for el in s.split()}
print(result)