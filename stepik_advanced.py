#
a, b = int(input()), int(input())
print(a + b, a - b, a * b, a / b, a // b, a % b, (a ** 10 + b ** 10) ** 0.5, sep='\n')

#
mass, rost = float(input()), float(input())
imt = mass / (rost * rost)
if imt < 18.5: print('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –º–∞—Å—Å–∞')
elif 18.5 <= imt <= 25: print('–û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –º–∞—Å—Å–∞')
elif imt > 25: print('–ò–∑–±—ã—Ç–æ—á–Ω–∞—è –º–∞—Å—Å–∞')

#
s = len(input()) * 60
print(f'{s // 100} —Ä. {s % 100} –∫–æ–ø.')

#
animals = ["–û–±–µ–∑—å—è–Ω–∞", "–ü–µ—Ç—É—Ö", "–°–æ–±–∞–∫–∞", "–°–≤–∏–Ω—å—è", "–ö—Ä—ã—Å–∞",
           "–ë—ã–∫", "–¢–∏–≥—Ä", "–ó–∞—è—Ü", "–î—Ä–∞–∫–æ–Ω", "–ó–º–µ—è", "–õ–æ—à–∞–¥—å", "–û–≤—Ü–∞"]
print(animals[int(input()) % 12])

#–ó–∞–¥–∞—á–∞ –ò–æ—Å–∏—Ñ–∞ –§–ª–∞–≤–∏—è üå∂Ô∏èüå∂Ô∏è
n, k = int(input()), int(input())
s = [i for i in range(1, n + 1)]
while len(s) > 1:
    for q in range(0, k - 1):
        s.append(s[q])
    del s[:k]
print(*s)

#–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω—ã–µ —á–µ—Ç–≤–µ—Ä—Ç–∏
def definition_quarter(x, y):
    quarter = 0
    if x == 0 or y == 0: quarter = 0
    if x < 0 and y > 0: quarter = 2
    elif x > 0 and y > 0: quarter = 1
    elif x < 0 and y < 0: quarter = 3
    elif x > 0 and y < 0: quarter = 4
    return quarter

n = int(input())
ls = [input().rsplit() for i in range(n)]
qu1, qu2, qu3, qu4 = 0, 0, 0, 0
for i in ls:
    x, y = int(i[0]), int(i[1])
    temp = definition_quarter(x, y)
    if temp == 0: continue
    elif temp == 1: qu1 += 1
    elif temp == 2: qu2 += 1
    elif temp == 3: qu3 += 1
    elif temp == 4: qu4 += 1
print(f'–ü–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {qu1}' + '\n' +
      f'–í—Ç–æ—Ä–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {qu2}' + '\n' +
      f'–¢—Ä–µ—Ç—å—è —á–µ—Ç–≤–µ—Ä—Ç—å: {qu3}' + '\n' +
      f'–ß–µ—Ç–≤–µ—Ä—Ç–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {qu4}')

#–ö—Ä–µ–º–Ω–∏–µ–≤–∞—è –¥–æ–ª–∏–Ω–∞ ü§ñüå∂Ô∏èüå∂Ô∏è
ls = [input() for i in range(int(input()))]
s_main = 'anton'
s_temp = ''
for s in ls:
    s_temp = s
    for i in s_main:
        if i in s_temp:
           s_temp = s_temp[s_temp.find(i):]
        else:
            break
    else:
        print(ls.index(s) + 1, end=' ')

#–†–æ—Å–∫–æ–º–Ω–∞–¥–∑–æ—Ä –∑–∞–ø—Ä–µ—Ç–∏–ª –±—É–∫–≤—É stepik
word = input() + ' –∑–∞–ø—Ä–µ—Ç–∏–ª –±—É–∫–≤—É'
a = [chr(i) for i in range(1072,1184) if chr(i) != '—ë']
for x in a:
    if x in word:
        print(word, x)
        word = word.replace(x, '').replace('  ', ' ').strip()

# –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞
def word_chek(new_word):
    result = 0
    if new_word == '–∫–∞–º–µ–Ω—å': result = 1
    elif new_word == '–Ω–æ–∂–Ω–∏—Ü—ã': result = 2
    elif new_word == '–±—É–º–∞–≥–∞': result = 3
    elif new_word == '—è—â–µ—Ä–∏—Ü–∞': result = 4
    elif new_word == '–°–ø–æ–∫': result = 5
    return result

def game_chek(timur, ruslan):
    s_result = ''
    if timur == 1 and ruslan == 2: s_result = '–¢–∏–º—É—Ä'
    elif timur == 2 and ruslan == 3: s_result = '–¢–∏–º—É—Ä'
    elif timur == 3 and ruslan == 1: s_result = '–¢–∏–º—É—Ä'
    elif timur == 1 and ruslan == 4: s_result = '–¢–∏–º—É—Ä'
    elif timur == 2 and ruslan == 4: s_result = '–¢–∏–º—É—Ä'
    elif timur == 3 and ruslan == 5: s_result = '–¢–∏–º—É—Ä'
    elif timur == 4 and ruslan == 5: s_result = '–¢–∏–º—É—Ä'
    elif timur == 4 and ruslan == 3: s_result = '–¢–∏–º—É—Ä'
    elif timur == 5 and ruslan == 1: s_result = '–¢–∏–º—É—Ä'
    elif timur == 5 and ruslan == 2: s_result = '–¢–∏–º—É—Ä'

    if timur == 1 and ruslan == 3: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 2 and ruslan == 1: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 3 and ruslan == 2: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 1 and ruslan == 5: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 2 and ruslan == 5: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 3 and ruslan == 4: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 4 and ruslan == 1: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 4 and ruslan == 2: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 5 and ruslan == 3: s_result = '–†—É—Å–ª–∞–Ω'
    elif timur == 5 and ruslan == 4: s_result = '–†—É—Å–ª–∞–Ω'

    if timur == ruslan: s_result = '–ù–∏—á—å—è'
    return print(s_result)

game_chek(word_chek(input()),word_chek(input()))

#–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ç–Ω–æ—Å—Ç–∏
def digit(num1, num2):
    if num1 % num2 == 0: return '–¥–µ–ª–∏—Ç—Å—è'
    else: return '–Ω–µ –¥–µ–ª–∏—Ç—Å—è'
print(digit(int(input()),int(input())))

list1 = [[1, 7, 8], [9, 7, 102], [102, 106, 105], [100, 99, 98, 103], [1, 2, 3]]
total = 0
counter = 0
for i in list1:
    total += sum(i)
    counter += len(i)
print(total / counter)